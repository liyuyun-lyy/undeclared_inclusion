common --experimental_allow_tags_propagation
common --experimental_cc_shared_library
common --incompatible_new_actions_api=false
common --incompatible_restrict_string_escapes=false
common --show_timestamps
common --incompatible_legacy_local_fallback=false
#common --remote_local_fallback_strategy=sandboxed

fetch:downloader --experimental_remote_downloader=grpc://com.taobao.search.bazel.server:9092 --remote_cache=grpc://com.taobao.search.bazel.server:9092
build --remote_cache=http://com.taobao.search.bazel.server:8080 --remote_local_fallback

# remote cache conflicts with remote executor.
build:remote --remote_executor=grpc://localhost:8980 --remote_cache=grpc://localhost:8980
build:remote --jobs=500 --local_test_jobs=HOST_CPUS*.8 --build_request_id="https://host?ENSURE_OUTPUTS_PRESENT=true#00000000-0000-0000-0000-000000000000"
common:buildfarm --remote_cache=grpc://com.taobao.search.bazel.master:8989

# bep for flaky tests filter etc
common:cicd --build_event_json_file=bep.json --nobuild_event_json_file_path_conversion
build:cicd --show_result=0 --noverbose_failures --auto_output_filter=all
test:cicd --test_output=errors --max_test_output_bytes=102400 --experimental_ui_max_stdouterr_bytes=3145728
coverage:cicd --combined_report=lcov
coverage:cicd -k --test_output=summary

# Enable fission https://gcc.gnu.org/wiki/DebugFission
# Use "build target.dwp" to generate the dwp file
# build:remote --fission=yes --features=per_object_debug_info

build --action_env=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/taobao/java/bin:/sbin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/X11R6/bin
build --incompatible_disable_nocopts=false
#build --keep_going
# important for cache signature, more info: https://work.aone.alibaba-inc.com/issue/38160630
build --define indexlib_coroutine=yes
build --action_env=BAZEL_CXXOPTS="-fcoroutines"
build --action_env=TURING_ENGINE_DEV_VERSION
build --host_action_env=TURING_ENGINE_DEV_VERSION
build --cxxopt="-std=c++17" --copt="-DGTEST_USE_OWN_TR1_TUPLE=0" --copt="-DEIGEN_MAX_CPP_VER=11"
build --cxxopt="-Wno-stringop-overflow"
build --cxxopt="-Wno-stringop-truncation"
build --cxxopt="-Wno-register"
build --copt="-mno-avx512f"
build --copt="-mrdrnd"
build --copt="-Wall" --copt="-Wno-sign-compare" --copt="-Wno-ignored-attributes"
build --copt "-Iaios/storage/"
build --strip="always"
build --linkopt="-Wl,-export-dynamic"
build --linkopt="-lpthread -ldl"
build --define=grpc_no_ares=true
build --define=fslib_use_async=yes
#test --verbose_failures --test_output=streamed
#test --verbose_failures
build --define=ABSOLUTE_JAVABASE=/opt/taobao/java
build --host_javabase=@bazel_tools//tools/jdk:absolute_javabase
build --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla
build --java_toolchain=@bazel_tools//tools/jdk:toolchain_vanilla
# set sandbox in ram disk
build --sandbox_base=/mnt/ram/
build --copt="-fdebug-types-section" # relocation truncated to fit: R_X86_64_32 against `.debug_info'

test --build_tests_only
test --test_env="DISABLE_CODEGEN=true"
test --test_env=HADOOP_HOME
test --test_env=JAVA_HOME
test --test_env="WD_WORKDIR=./aios/wunder"
## for ha3_plugins case
test --test_env CHECK_CASE_TIMEOUT=false
test --test_env="TZ=UTC-8"
test --test_env="LD_LIBRARY_PATH=/usr/local/nvidia/lib64:/usr/local/cuda-11.2/lib64:/usr/local/cuda-11.2:$LD_LIBRARY_PATH:$HADOOP_HOME/lib/native/:./aios/fslib:/opt/taobao/java/jre/lib/amd64/server/";
# test --test_env="LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HADOOP_HOME/lib/native/:./aios/fslib:/opt/taobao/java/jre/lib/amd64/server/";;
# cicd/submit_server gitlabci, gitlab token
test --test_env="PRIVATE_TOKEN" --test_env="ORIGIN_TOKEN" --test_env="AONE_TOKEN"

# xla
build:xla --define with_xla_support=true
build:xla --cxxopt=-fcoroutines

build:pai --define with_pai_support=true
build:pangutemp --define with_pangu_temp_support=true
build:star --define with_star_support=true
build:brpc --define with_brpc_support=true
build:porsche --define with_porsche_support=true
# build --define with_monolith_support=true
build:licenseserver --define with_license_server_support=true

# Options used to build with CUDA11
build:cuda11 --copt="-DGOOGLE_CUDA=1"
build:cuda11 --linkopt="-lm"
build:cuda11 --define=using_cuda=true --define=using_cuda_nvcc=true
build:cuda11 --crosstool_top=@local_config_cuda//crosstool:toolchain
build:cuda11 --action_env CUDA_TOOLKIT_PATH="/usr/local/cuda-11.2/"
build:cuda11 --action_env TF_CUDA_VERSION="11.2"
build:cuda11 --action_env TF_CUDA_PATHS="/usr/local/cuda-11.2/"
build:cuda11 --action_env CUDNN_INSTALL_PATH="/usr/local/cuda-11.2/"
build:cuda11 --action_env TF_CUDNN_VERSION="8"
build:cuda11 --action_env NCCL_INSTALL_PATH="/usr/local/cuda-11.2/"
build:cuda11 --action_env NCCL_HDR_PATH="/usr/local/cuda-11.2/include"
build:cuda11 --action_env TF_CUDA_CLANG="0"
build:cuda11 --action_env TF_NEED_CUDA="1"
build:cuda11 --action_env TF_NCCL_VERSION="2"
build:cuda11 --cxxopt=-fcoroutines
# 6.0 = P100, 7.0 = V100, 7.5 = T4, 8.6 = A10
build:cuda11 --action_env TF_CUDA_COMPUTE_CAPABILITIES="6.0,7.0,7.5,8.6"
build:cuda11 --action_env LD_LIBRARY_PATH="/usr/local/cuda-11.2:/usr/local/cuda-11.2/lib64:$LD_LIBRARY_PATH:$HADOOP_HOME/lib/native/:./aios/fslib:/opt/taobao/java/jre/lib/amd64/server/"
test:cuda11 --test_env="LD_LIBRARY_PATH=/usr/local/nvidia/lib64:/usr/local/cuda-11.2:/usr/local/cuda-11.2/lib64:$LD_LIBRARY_PATH:$HADOOP_HOME/lib/native/:./aios/fslib:/opt/taobao/java/jre/lib/amd64/server/"

# default
build --action_env CC_OPT_FLAGS="-O2"

# Options for fpga
build:fpga --action_env TF_NEED_FPGA="1"

# default off options
build --action_env TF_NEED_PAI_ALIFPGA="0"
build --action_env TF_NEED_PAI="0"
build --action_env TF_NEED_PANGU_TEMP="0"
build --action_env TF_NEED_OPENCL_SYCL="0"
build --action_env TF_NEED_ROCM="0"
build --action_env TF_NEED_PAI_TRT="0"
build --action_env GCC_HOST_COMPILER_PATH="/usr/bin/gcc"
build --action_env PYTHON_BIN_PATH="/usr/bin/python3"

build:opt --copt=-march=native
build:opt --host_copt=-march=native
build:opt --define with_default_optimizations=true

build:mkl_threadpool --define=build_with_mkl=true --define=enable_mkl=true
build:mkl_threadpool --define=build_with_mkldnn_threadpool=true
build:mkl_threadpool -c opt

build:v2 --define=tf_api_version=2

#build --workspace_status_command "sh ./package/git_commit/git_info.sh"
startup  --io_nice_level 7

build --cxxopt="-std=c++17" --cxxopt="-Wno-register"
build --config=old_abi

# build --copt -g --strip=never

build:old_abi --copt="-D_GLIBCXX_USE_CXX11_ABI=0" --define use_abi=0
build:new_abi --copt="-D_GLIBCXX_USE_CXX11_ABI=1" --define use_abi=1

build:be --config=release
build:be --config=cuda11
build:be --copt=-march=skylake-avx512
build:be --copt=-mno-avx512f
build:be --test_env=SUEZOPS_PLATFORM=be

build:be_old --config=release
build:be_old --config=cuda11
build:be_old --copt=-march=skylake-avx512
build:be_old --copt=-mno-avx512f
build:be_old --test_env=SUEZOPS_PLATFORM=be_old

build:table_api --config=release
build:table_api --config=cuda11
build:table_api --copt=-march=skylake-avx512
build:table_api --copt=-mno-avx512f
build:table_api --test_env=SUEZOPS_PLATFORM=table_api

# asan
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -fno-omit-frame-pointer
build:asan --copt -mcmodel=medium  # for "fix relocation truncated to fit: R_X86_64_32 against `.debug_info'" collect2 error
build:asan --copt -fPIC # for "fix relocation truncated to fit: R_X86_64_32 against `.debug_info'" collect2 error
build:asan --copt -fdebug-types-section # for "fix relocation truncated to fit: R_X86_64_32 against `.debug_info'" collect2 error
build:asan --linkopt -fsanitize=address
build:asan --linkopt -mcmodel=medium  # for "fix relocation truncated to fit: R_X86_64_32 against `.debug_info'" collect2 error

# rtp
build:rtp --config=release
build:rtp --config=cuda11
build:rtp --copt -DNPU=1
build:rtp --copt=-march=skylake-avx512
build:rtp --copt=-mno-avx512f

build:spr --define build_with_mkl_dnn_v1_only=true
build:spr --define=build_with_mkl=true
build:spr --define=enable_mkl=true
build:spr --define=tensorflow_mkldnn_contraction_kernel=0
build:spr --define=build_with_mkl_opensource=true
build:spr --define=build_with_mkldnn_threadpool=true
build:spr --copt=-march=skylake-avx512
build:spr --copt=-DENABLE_INTEL_MKL_BFLOAT16
build:spr --copt=-DSPR_LIMIT_NUM_THREADS
build:spr --copt=-fPIC # for "fix relocation truncated to fit: R_X86_64_32 against `.debug_info'" collect2 error
build:spr --copt=-fdebug-types-section # for "fix relocation truncated to fit: R_X86_64_32 against `.debug_info'" collect2 error

# be&rtp bs
build:bs_be_rtp --config=release
build:bs_be_rtp --copt=-march=skylake-avx512
build:bs_be_rtp --copt=-mno-avx512f

build:dolphin --config=release
build:dolphin --copt=-march=skylake-avx512
build:dolphin --copt=-mno-avx512f

build:static --cpu=k8 --crosstool_top=//bazel/toolchain --host_crosstool_top=@bazel_tools//tools/cpp:toolchain

build:debug --copt -g --copt -O0
build:debug --strip=never

build:release -c opt
build:release --copt -g --copt -O2
build:release --strip=never

#build --jobs 90
# clang for coroutines
build:clang --remote_default_exec_properties=compiler=clang11
build:clang --action_env=CC=/usr/bin/clang
build:clang --action_env=CXX=/usr/bin/clang++
build:clang --define compiler_type=clang++
#build:clang --cxxopt -std=c++2a
build:clang --repo_env=BAZEL_CXXOPTS="-fcoroutines-ts"


build:clang --copt -Wall
build:clang --copt -Wextra

# 很多外部库和虚函数重写都有 unused-parameter，范围过大暂时忽略
build:clang --copt -Wno-unused-parameter
# 在 extern "C" 内写了 c++ 函数，只是为了方便，可以忽略
build:clang --copt -Wno-non-c-typedef-for-linkage
# C++ 引用了 C 写法 typedef struct，可以忽略
build:clang --copt -Wno-return-type-c-linkage
# 一般是 for 循环里用了 int i for size，太多了暂时忽略
build:clang --copt -Wno-sign-compare
# 违反了 rule of 3, 目前 eigen 和 gtest 中比较多
build:clang --copt -Wno-deprecated-copy
# 在 igraph Edge/Property 几个结构里。operator= 是虚的，可以忽略
build:clang --copt -Wno-ambiguous-reversed-operator
# 使用了标记 deprecated 的函数，可以保持 warning 不是 error
build:clang --copt -Wno-deprecated-declarations
# 用 {} 初始化 struct 的时候后面一些成员没有被显示初始化。
# 大多情况是想直接用成员本身的默认值，可以忽略。
build:clang --copt -Wno-missing-field-initializers
# 一般存在于 scanner.ll 中，可以忽略
build:clang --copt -Wno-deprecated-register
# pangu 里定义了空 struct，C 中不允许，可以忽略
build:clang --copt -Wno-extern-c-compat
# clang 和 gcc 的 warning option 不一样，区分起来很麻烦，可以忽略
build:clang --copt -Wno-unknown-warning-option
# disable #warnings error
build:clang --copt -Wno-cpp
build:clang --copt -Wno-error=string-plus-int

build:clang --copt -Wno-unneeded-internal-declaration
build:clang --copt -Wno-implicit-const-int-float-conversion
build:clang --copt -Wno-thread-safety-precise
build:clang --copt -Wno-thread-safety-analysis
build:clang --copt -Werror

# explicitly use lld linker
build:clang --linkopt -fuse-ld=lld
build:clang --linkopt -lstdc++
# enable lto with --config=lto
# do not enable this for ut, since it will heavily slow down compile time
build:lto --config=clang
build:lto --linkopt -flto=thin
build:lto --copt -flto=thin

build:splitstack --copt -DUTHREAD_SPLIT_STACK
build:splitstack --copt -fsplit-stack
build:splitstack --copt -mllvm
build:splitstack --copt -extra-space-for-more-stack-expansion=65536
# linker will call compiler with lto opt
build:splitstack --linkopt -Wl,-mllvm
build:splitstack --linkopt -Wl,-extra-space-for-more-stack-expansion=65536
build:splitstack --define split_stack=on

# build:igraph --define support_avx2=false
build:igraph --config=release
build:igraph --config=lto
build:igraph --define use_coro=yes
build:igraph --define use_hos_framework=yes
build:igraph --define io_uring=on
build:igraph --cxxopt -std=c++17
build:igraph --copt -ggdb
build:igraph --copt -fno-stack-protector
build:igraph --copt -fomit-frame-pointer
build:igraph --config=new_abi

build:igraph --copt -Wno-macro-redefined
build:igraph --copt -mllvm
build:igraph --copt -enhance-debug-with-coroutine

build:iwyu --action_env=CC=/usr/bin/include-what-you-use
build:iwyu --action_env=CXX=/usr/bin/include-what-you-use
build:iwyu --define compiler_type=clang++
build:iwyu --config=clang

build:eads --config=release
build:eads --config=cuda11
build:eads --copt=-march=skylake-avx512
build:eads --copt=-mno-avx512f

build:cm2 --config=release
build:cm2 --copt -DHTTP_ARPC_NO_CAMELCASE_NAME

# when run slow case, delete fast case
# test --test_tag_filters=slow_case
# default only run fast case
test --test_tag_filters=-slow_case,-codegen_case,-one_box --test_env CHECK_CASE_TIMEOUT=false

# bazel diff
run -c opt --show_loading_progress=true --show_progress=true --ui_event_filters='INFO,ERROR,DEBUG'
run:verbose -c dbg --show_loading_progress=true --show_progress=true --ui_event_filters='INFO,ERROR,DEBUG'
